name: Deploy on Vercel
on: push
jobs:
  # Creates a matrix of projects that need to be deployed
  #   - Project must contain a 'deploy.json' file
  #   - Project folder must contain changes
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create matrix by looking at projects which contain deploy.json
        id: set-matrix
        run: echo "::set-output name=matrix::$(./scripts/create-matrix.sh | jq -Rsc 'split("\n")[:-1]')"
  # Using the matrix created above, we try to deploy the projects
  deploy:
    needs: create-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.create-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Get projectId
        id: get-project-id
        run: echo "::set-output name=projectId::$(cat '${{ matrix.project }}' | jq '.projectId')"
      - name: Get nodeVersion or use default
        id: get-node-version
        run: echo "::set-output name=nodeVersion::$(cat '${{ matrix.project }}' | jq '.nodeVersion // 16')"
      # Fail if 'projectId' in 'deploy.json' is invalid
      - name: Validate projectId
        if: startsWith(steps.get-project-id.outputs.projectId, '"prj_') != true
        run: echo "Invalid projectId" && exit 1;
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-project-id.outputs.nodeVersion }}
          registry-url: https://registry.npmjs.org/
          cache: yarn
      - name: Install Yarn
        if: ${{ env.ACT == 'true' }}
        run: |
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          apt update
          apt install --no-install-recommends yarn
      - name: Install other dependancies
        run: yarn
      - name: Deploy to production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          npx vercel deploy \
            --cwd $(dirname ${{ matrix.project }}) \
            --prod \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope hoprnet \
            --env VERCEL_PROJECT_ID=${{ steps.get-project-id.outputs.projectId }} \
            --env VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }} \
            --confirm
      - name: Deploy to development
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          npx vercel deploy \
            --cwd $(dirname ${{ matrix.project }}) \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope hoprnet \
            --env VERCEL_PROJECT_ID=${{ steps.get-project-id.outputs.projectId }} \
            --env VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }} \
            --confirm
